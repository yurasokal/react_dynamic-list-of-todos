{"version":3,"sources":["components/TodosForm/TodosForm.jsx","components/TodoList/TodoList.jsx","api/helpers.js","components/CurrentUser/CurrentUser.jsx","api/todos.js","App.jsx","index.js"],"names":["TodosForm","title","handleChangeInput","taskStatus","filterTodos","className","type","name","placeholder","value","onChange","TodoList","state","todos","props","allTodos","event","target","setState","prevState","filter","todo","completed","_","this","toUpperCase","includes","selectUser","map","key","id","classNames","readOnly","userId","onClick","React","Component","request","url","options","fetch","then","response","ok","Error","status","statusText","json","data","CurrentUser","user","loadData","prevProps","a","email","phone","clearUser","color","height","width","App","selectedUserId","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a5fb38f6.chunk.js","sourcesContent":["import React from 'react';\nimport './TodosForm.scss';\n\nexport const TodosForm = ({\n  title,\n  handleChangeInput,\n  taskStatus,\n  filterTodos\n}) => {\n\n  return (\n    <>\n      <div className=\"input-size\">\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Todos by title\"\n          value={title}\n          onChange={handleChangeInput}\n          className=\"input is-info\"\n        />\n      </div>\n\n      <div className=\"select is-link\">\n        <select\n          className=\"taskStatus\"\n          name=\"taskStatus\"\n          value={taskStatus}\n          onChange={filterTodos}\n        >\n          <option>\n            All todos\n          </option>\n          <option>\n            Active(not completed) todos\n          </option>\n          <option>\n            Completed todos\n          </option>\n        </select>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\nimport { TodosForm } from '../TodosForm';\n\nexport class TodoList extends React.Component {\n  state = {\n    title: '',\n    todos: this.props.todos,\n    allTodos: this.props.todos,\n    taskStatus: '',\n  }\n\n  componentDidUpdate(_, prevState) {\n    const { allTodos, title } = this.state;\n\n    if (prevState.title !== this.state.title) {\n      this.setState({\n        todos: allTodos.filter((todo) => {\n          if (!todo.title) {\n            return 0;\n          }\n\n          return todo.title.toUpperCase().includes(title.toUpperCase());\n        }),\n      });\n    }\n  }\n\n  filterTodos = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({ [name]: value });\n    this.setState((prevState) => {\n      switch (value) {\n        case 'Active(not completed) todos':\n          return { todos: prevState.allTodos\n            .filter(todo => !todo.completed) };\n        case 'Completed todos':\n          return { todos: prevState.allTodos\n            .filter(todo => todo.completed) };\n        case 'All todos':\n        default:\n          return { todos: prevState.allTodos };\n      }\n    });\n  };\n\n  handleChangeInput = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      title: value,\n    });\n  };\n\n  render() {\n    const { selectUser } = this.props;\n    const { todos } = this.state;\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n\n        <TodosForm\n          title={this.state.title}\n          handleChangeInput={this.handleChangeInput}\n          taskStatus={this.state.taskStatus}\n          filterTodos={this.filterTodos}\n        />\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {todos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames('TodoList__item',\n                  { 'TodoList__item--unchecked': !todo.completed },\n                  { 'TodoList__item--checked': todo.completed })}\n              >\n                <label>\n                  <input type=\"checkbox\" readOnly />\n                  <p>{todo.title}</p>\n                </label>\n\n                {selectUser === todo.userId ? (\n                  <button\n                    className=\"TodoList__user-button--selected button\"\n                    type=\"button\"\n                    onClick={() => {\n                      selectUser(0);\n                    }}\n                  >\n                    User&nbsp;\n                    {todo.userId}\n                  </button>\n                ) : (\n                  <button\n                    className=\"\n                    TodoList__user-button\n                    button\n                  \"\n                    type=\"button\"\n                    onClick={() => {\n                      selectUser(todo.userId);\n                    }}\n                  >\n                    User&nbsp;\n                    {todo.userId}\n                  </button>\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","const BASE_URL = 'https://mate-api.herokuapp.com/';\n\nexport const request = (url, options) => fetch(`${BASE_URL}${url}`, options)\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  })\n  .then(response => response.data);\n","import React from 'react';\nimport './CurrentUser.scss';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Loader from 'react-loader-spinner';\nimport { getUser } from '../../api/todos';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    user: null,\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.userId !== this.props.userId) {\n      this.loadData();\n    }\n  }\n\n  async loadData() {\n    const user = await getUser(this.props.userId);\n\n    this.setState({ user });\n  }\n\n  render() {\n    const { user } = this.state;\n\n    if (!user) {\n      return (\n        <Loader\n          type=\"Puff\"\n          color=\"#00BFFF\"\n          height={80}\n          width={80}\n        />\n      );\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {' '}\n            {user.id}\n          </span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n        <button\n          type=\"button\"\n          onClick={this.props.clearUser}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n","// import { wait } from '@testing-library/react';\nimport { request } from './helpers';\n\nexport const getTodos = () => request('todos');\n\nexport const getUser = userId => request(`users/${userId}`);\n\n// export const getUserTodos = userId => request(`/users/${userId}/todos`);\n\n// function wait(delay) {\n//   return new Promise(resolve => setTimeout(resolve, delay));\n// }\n\n// export const getUsers = async () => {\n//   await wait(2000);\n//   return request('/Users');\n// }\n\n// export const getUser = (userId) => {\n//   return request(`/users/${userId}`);\n// };\n\n// export const getUserTodos = (userId) => {\n//   return request(`/users/${userId}/todos`);\n// }\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/todos';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  async componentDidMount() {\n    const todos = await getTodos();\n\n    this.setState({ todos });\n  }\n\n  selectUser = (userId) => {\n    this.setState({\n      selectedUserId: userId,\n    });\n  }\n\n  clearUser = (userId) => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          {todos.length !== 0 ? (\n            <TodoList\n              todos={todos}\n              selectedUserId={selectedUserId}\n              selectUser={this.selectUser}\n            />\n          ) : 'no todos'\n          }\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}